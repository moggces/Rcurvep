check_threshold(threshold = threshold_l)
outd <- run_curvep_job(zfishbeh, directionality = 0, n_sample = NULL, threshold = threshold_l, other_paras = list(CARR = 20, TrustHi = TRUE))
library(Rcurvep)
packrat::snapshot()
packrat::status()
packrat::snapshot()
here
packrat::snapshot()
data("zfishdev_act")
acts <- zfishdev_act %>%
separate(dduid, c("endpoint", "chemical", "directionality"), sep = "#") %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
```{r loadp, message = FALSE, warning =  FALSE}
# load required packages
library(Rcurvep)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
data("zfishdev_act")
acts <- zfishdev_act %>%
separate(dduid, c("endpoint", "chemical", "directionality"), sep = "#") %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
acts
acts %>% count(endpoint, thres)
acts %>% distinct(endpoint, thres)
?count
acts %>% group_by(endpoint) %>% count
glimpse(act)
glimpse(acts)
?glimpse
outthres <- select_basenoise_threshold(acts, id = c("endpoint", "directionality"), chemical = "chemical", threshold = "thres", potency = "POD")
outthres
temp <- 'tend'
rlang::sym(temp)
?rlang::sym
rlang::sym(temp) %>% as.character()
devtools::test()
devtools::test()
devtools::test()
devtools::test()
data("zfishdev_act")
acts <- zfishdev_act %>%
separate(dduid, c("endpoint", "chemical", "directionality"), sep = "#") %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
acts %>%
count()
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "directionality"), chemical = "chemical", threshold = "thres", potency = "POD")
data("zfishdev_act")
acts <- zfishdev_act %>%
separate(dduid, c("endpoint", "chemical", "directionality"), sep = "#") %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
acts %>%
count()
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "directionality"), chemical = "chemical", threshold = "thres", potency = "POD")
data("zfishdev_act")
acts <- zfishdev_act %>%
separate(dduid, c("endpoint", "chemical", "directionality"), sep = "#") %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "directionality"), chemical = "chemical", threshold = "thres", potency = "POD")
library(Rcurvep)
data("zfishdev_act")
acts <- zfishdev_act %>%
separate(dduid, c("endpoint", "chemical", "directionality"), sep = "#") %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "directionality"), chemical = "chemical", threshold = "thres", potency = "POD")
outthres
# the development version from GitHub:
# install.packages("devtools")
devtools::install_github("moggces/Rcurvep")
# load required packages
library(Rcurvep)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
# load concentration response dataset
data("zfishbeh")
zfishbeh
zfishbeh
zfishbeh %>% count(concs)
zfishbeh %>% count(endpoint, chemical, concs)
zfishbeh %>% count(endpoint, chemical, concs) %>% sum(.$n)
# a pre-defined threshold for increasing response
threshold_up <- 15
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = NULL, threshold = threshold_up, other_paras = list(CARR = 20, TrustHi = TRUE))
# a pred-defined threshold for decreasing response
threshold_down <- 30
outd <- run_curvep_job(zfishbeh, directionality = -1, n_sample = NULL, threshold = threshold_down, other_paras = list(CARR = 20, TrustHi = TRUE))
# or combined
threshold_l <- list("1" = threshold_up, "-1" = threshold_down)
outd <- run_curvep_job(zfishbeh, directionality = 0, n_sample = NULL, threshold = threshold_l, other_paras = list(CARR = 20, TrustHi = TRUE))
n_sample_test <- 2
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
error <- rnorm(100, 0, 10)
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 2, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE), vehicle_data = error)
threshold_range <- seq(5, 10, by = 5) # usually seq(5, 95, by = 5)
n_sample_test <- 2 # usually for 1000
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = threshold_range, other_paras = list(CARR = 20, TrustHi = TRUE))
# extract activity
act <- extract_curvep_data(outd, "act")
# extract high/low conc
hl <- extract_curvep_data(outd, "concs_hl")
# combine data
outd_ext <- list(act, hl) %>%
reduce(inner_join)
# calculate confidence interval of BMC
result <- outd_ext %>%
group_by(endpoint, chemical, direction, thres) %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD)) %>%
summarise(
BMC = median(POD),
BMCL = quantile(POD, 0.025),
BMCU = quantile(POD, 0.975),
hit_confidence = sum(hit)/n()
)
# extract activity
act <- extract_curvep_data(outd, "act")
# extract high/low conc
hl <- extract_curvep_data(outd, "concs_hl")
# combine data
outd_ext <- list(act, hl) %>%
reduce(inner_join)
# calculate confidence interval of BMC
result <- outd_ext %>%
group_by(endpoint, chemical, direction, threshold) %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD)) %>%
summarise(
BMC = median(POD),
BMCL = quantile(POD, 0.025),
BMCU = quantile(POD, 0.975),
hit_confidence = sum(hit)/n()
)
result %>% select(-thres)
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 100, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
# extract activity
act <- extract_curvep_data(outd, "act")
# extract high/low conc
hl <- extract_curvep_data(outd, "concs_hl")
# combine data
outd_ext <- list(act, hl) %>%
reduce(inner_join)
# calculate confidence interval of BMC
result <- outd_ext %>%
group_by(endpoint, chemical, direction, threshold) %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD)) %>%
summarise(
BMC = median(POD),
BMCL = quantile(POD, 0.025),
BMCU = quantile(POD, 0.975),
hit_confidence = sum(hit)/n()
)
result %>% select(-threshold)
# extract resp_out
in_concs <- extract_curvep_data(outd, "concs_in")
out_resps  <- extract_curvep_data(outd, "resps_out")
plotd <- list(in_concs, out_resps) %>%
reduce(inner_join) %>%
unnest() %>%
group_by(endpoint, chemical, direction, threshold, concs) %>%
summarize(resps = round(median(resps),2))
p <- ggplot(plotd %>% filter(chemical == "Caffeine|58-08-2"), aes(x = concs, y = resps)) + geom_point() + geom_line()
p + facet_wrap(~ endpoint)
plotd
list(in_concs, out_resps) %>%
reduce(inner_join)
temp1 <- list(in_concs, out_resps) %>%
reduce(inner_join)
temp1
temp1[1,"resps"]
temp1 %>% unnest()
result
temp1 %>% unnest()
temp1 %>% unnest() %>% group_by(endpoint, chemical, direction, threshold, concs) %>%
summarize(resps = round(median(resps),2))
temp1 %>% unnest() %>% group_by(endpoint, chemical, direction, threshold, concs) %>%
summarize(resps = round(median(resps),2)) %>% nest(concs, resps)
temp1 %>% unnest() %>% group_by(endpoint, chemical, direction, threshold, concs) %>%
summarize(resps = round(median(resps),2)) %>% mutate(concs = list(concs), resps = list(resps))
devtools::test(filter = "out")
devtools::test(filter = "out")
library(Rcurvep)
# load concentration response dataset
data("zfishbeh")
zfishbeh
# a pre-defined threshold for increasing response
threshold_up <- 15
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = NULL, threshold = threshold_up, other_paras = list(CARR = 20, TrustHi = TRUE))
# a pred-defined threshold for decreasing response
threshold_down <- 30
outd <- run_curvep_job(zfishbeh, directionality = -1, n_sample = NULL, threshold = threshold_down, other_paras = list(CARR = 20, TrustHi = TRUE))
# or combined
threshold_l <- list("1" = threshold_up, "-1" = threshold_down)
outd <- run_curvep_job(zfishbeh, directionality = 0, n_sample = NULL, threshold = threshold_l, other_paras = list(CARR = 20, TrustHi = TRUE))
# load required packages
library(Rcurvep)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
# load concentration response dataset
data("zfishbeh")
zfishbeh
# a pre-defined threshold for increasing response
threshold_up <- 15
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = NULL, threshold = threshold_up, other_paras = list(CARR = 20, TrustHi = TRUE))
# a pred-defined threshold for decreasing response
threshold_down <- 30
outd <- run_curvep_job(zfishbeh, directionality = -1, n_sample = NULL, threshold = threshold_down, other_paras = list(CARR = 20, TrustHi = TRUE))
# or combined
threshold_l <- list("1" = threshold_up, "-1" = threshold_down)
outd <- run_curvep_job(zfishbeh, directionality = 0, n_sample = NULL, threshold = threshold_l, other_paras = list(CARR = 20, TrustHi = TRUE))
n_sample_test <- 2
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
error <- rnorm(100, 0, 10)
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 2, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE), vehicle_data = error)
threshold_range <- seq(5, 10, by = 5) # usually seq(5, 95, by = 5)
n_sample_test <- 2 # usually for 1000
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = threshold_range, other_paras = list(CARR = 20, TrustHi = TRUE))
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 100, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
# extract activity
act <- extract_curvep_data(outd, "act")
# extract high/low conc
hl <- extract_curvep_data(outd, "concs_hl")
# combine data
outd_ext <- list(act, hl) %>%
reduce(inner_join)
# calculate 95% confidence interval of BMC and hit confidence
result <- outd_ext %>%
group_by(endpoint, chemical, direction, threshold) %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD)) %>%
summarise(
BMC = median(POD),
BMCL = quantile(POD, 0.025),
BMCU = quantile(POD, 0.975),
hit_confidence = sum(hit)/n()
)
result %>% select(-threshold)
extract_curvep_data(outd, "summary")
temp1 <- extract_curvep_data(outd, "summary")
temp1
View(temp1)
list(act, hl) %>%
purrr::reduce(dplyr::inner_join, by = c("repeat_id", "threshold", "endpoint", "chemical", "direction"))
act
act <- extract_curvep_data(c_out, "act")
hl <- extract_curvep_data(c_out, "concs_hl")
in_concs <- extract_curvep_data(c_out, "concs_in")
out_resps  <- extract_curvep_data(c_out, "resps_out")
m <- list(act, hl) %>%
purrr::reduce(dplyr::inner_join, by = c("repeat_id", "threshold", "endpoint", "chemical", "direction")) %>%
dplyr::mutate(
POD = ifelse(is.na(POD), conc_highest, POD),
EC50 = ifelse(is.na(EC50), conc_highest, EC50)) %>%
dplyr::group_by(endpoint, chemical, direction, threshold)
result1 <- m %>%
dplyr::summarise_at(
vars(one_of("POD", "EC50", "Emax", "wAUC", "wAUC_prev")),
funs(med = median(.), ciu = quantile(., probs = 0.975), cil = quantile(., probs = 0.025) )
) %>% dplyr::ungroup()
result
result1
result3 <- list(in_concs, out_resps) %>%
purrr::reduce(dplyr::inner_join, by = c("repeat_id", "threshold", "endpoint", "chemical", "direction" )) %>%
tidyr::unnest() %>%
dplyr::group_by(endpoint, chemical, direction, threshold, concs) %>%
dplyr::summarize(resps = round(median(resps),2)) %>%
dplyr::mutate(concs = list(concs), resps = list(resps)) %>% dplyr::ungroup()
result3
list(in_concs, out_resps) %>%
purrr::reduce(dplyr::inner_join, by = c("repeat_id", "threshold", "endpoint", "chemical", "direction" )) %>%
tidyr::unnest() %>%
dplyr::group_by(endpoint, chemical, direction, threshold, concs) %>%
dplyr::summarize(resps = round(median(resps),2)) %>%
dplyr::summarize(concs = list(concs), resps = list(resps)) %>% dplyr::ungroup()
out_resps
result3 <- list(in_concs, out_resps) %>%
purrr::reduce(dplyr::inner_join, by = c("repeat_id", "threshold", "endpoint", "chemical", "direction" )) %>%
tidyr::unnest() %>%
dplyr::group_by(endpoint, chemical, direction, threshold, concs) %>%
dplyr::summarize(resps = round(median(resps),2)) %>%
dplyr::summarize(concs = list(concs), resps = list(resps)) %>% dplyr::ungroup()
result3
result3 %>% unnest()
temp2 <- result3 %>% unnest()
View(temp2)
View(result1)
acts
act
View(act)
temp2 <- list(in_concs, out_resps) %>%
purrr::reduce(dplyr::inner_join, by = c("repeat_id", "threshold", "endpoint", "chemical", "direction" )) %>%
tidyr::unnest() %>%
dplyr::group_by(endpoint, chemical, direction, threshold, concs)
temp2
View(temp2)
temp2 %>%
dplyr::summarize(resps = round(median(resps),2))
temp3 <- temp2 %>%
dplyr::summarize(resps = round(median(resps),2))
View(temp3)
temp2 %>% filter(endpoint == "120_a_L1_distmoved" & chemical == "Saccharin Sodium salt hydrate|82385-42-0" & concs == -2.7)
temp3 <- temp2 %>% filter(endpoint == "120_a_L1_distmoved" & chemical == "Saccharin Sodium salt hydrate|82385-42-0" & concs == -2.7)
temp3 %>% filter(resps > 0)
act %>% filter(endpoint == "120_a_L1_distmoved" & chemical == "Saccharin Sodium salt hydrate|82385-42-0" & concs == -2.7)
act %>% filter(endpoint == "120_a_L1_distmoved" & chemical == "Saccharin Sodium salt hydrate|82385-42-0" & wAUC > 0)
temp3 <- temp2 %>% filter(endpoint == "120_a_L1_distmoved" & chemical == "Saccharin Sodium salt hydrate|82385-42-0" )
temp2
View(temp3)
temp4 <- act %>% filter(endpoint == "120_a_L1_distmoved" & chemical == "Saccharin Sodium salt hydrate|82385-42-0" & wAUC > 0)
View(temp4)
outd
outd[2,]$output
extract_curvep_data(outd, "resps_out")
extract_curvep_data(outd, "resps_out")[2, "resps"]
extract_curvep_data(outd, "resps_out")[2, "resps"]  %>% unnest()
# load required packages
library(Rcurvep)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
# load concentration response dataset
data("zfishbeh")
zfishbeh
# a pre-defined threshold for increasing response
threshold_up <- 15
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = NULL, threshold = threshold_up, other_paras = list(CARR = 20, TrustHi = TRUE))
# a pred-defined threshold for decreasing response
threshold_down <- 30
outd <- run_curvep_job(zfishbeh, directionality = -1, n_sample = NULL, threshold = threshold_down, other_paras = list(CARR = 20, TrustHi = TRUE))
# or combined
threshold_l <- list("1" = threshold_up, "-1" = threshold_down)
outd <- run_curvep_job(zfishbeh, directionality = 0, n_sample = NULL, threshold = threshold_l, other_paras = list(CARR = 20, TrustHi = TRUE))
n_sample_test <- 2
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
error <- rnorm(100, 0, 10)
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 2, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE), vehicle_data = error)
threshold_range <- seq(5, 10, by = 5) # usually seq(5, 95, by = 5)
n_sample_test <- 2 # usually for 1000
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = threshold_range, other_paras = list(CARR = 20, TrustHi = TRUE))
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 100, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
# extract activity
act <- extract_curvep_data(outd, "act")
# extract high/low conc
hl <- extract_curvep_data(outd, "concs_hl")
# combine data
outd_ext <- list(act, hl) %>%
reduce(inner_join)
# calculate 95% confidence interval of BMC and hit confidence
result <- outd_ext %>%
group_by(endpoint, chemical, direction, threshold) %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD)) %>%
summarise(
BMC = median(POD),
BMCL = quantile(POD, 0.025),
BMCU = quantile(POD, 0.975),
hit_confidence = sum(hit)/n()
)
result %>% select(-threshold)
# extract resp_out
in_concs <- extract_curvep_data(outd, "concs_in")
out_resps  <- extract_curvep_data(outd, "resps_out")
plotd <- list(in_concs, out_resps) %>%
reduce(inner_join) %>%
unnest() %>%
group_by(endpoint, chemical, direction, threshold, concs) %>%
summarize(resps = round(median(resps),2))
p <- ggplot(plotd %>% filter(chemical == "Caffeine|58-08-2"), aes(x = concs, y = resps)) + geom_point() + geom_line()
p + facet_wrap(~ endpoint)
temp1 <- extract_curvep_data(outd, "summary")
temp1
temp1[2,]$resps
View(temp1)
outd
act
out_resps
out_resps[2,]$resps
outd
outd[2,]$output
# the development version from GitHub:
# install.packages("devtools")
devtools::install_github("moggces/Rcurvep")
# load required packages
library(Rcurvep)
library(dplyr)
library(tidyr)
library(purrr)
library(ggplot2)
# load concentration response dataset
data("zfishbeh")
zfishbeh
# a pre-defined threshold for increasing response
threshold_up <- 15
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = NULL, threshold = threshold_up, other_paras = list(CARR = 20, TrustHi = TRUE))
# a pred-defined threshold for decreasing response
threshold_down <- 30
outd <- run_curvep_job(zfishbeh, directionality = -1, n_sample = NULL, threshold = threshold_down, other_paras = list(CARR = 20, TrustHi = TRUE))
# or combined
threshold_l <- list("1" = threshold_up, "-1" = threshold_down)
outd <- run_curvep_job(zfishbeh, directionality = 0, n_sample = NULL, threshold = threshold_l, other_paras = list(CARR = 20, TrustHi = TRUE))
n_sample_test <- 2
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
error <- rnorm(100, 0, 10)
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 2, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE), vehicle_data = error)
threshold_range <- seq(5, 10, by = 5) # usually seq(5, 95, by = 5)
n_sample_test <- 2 # usually for 1000
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = n_sample_test, threshold = threshold_range, other_paras = list(CARR = 20, TrustHi = TRUE))
?run_curvep_job
outd <- run_curvep_job(zfishbeh, directionality = 1, n_sample = 100, threshold = 15, other_paras = list(CARR = 20, TrustHi = TRUE))
# extract activity
act <- extract_curvep_data(outd, "act")
# extract high/low conc
hl <- extract_curvep_data(outd, "concs_hl")
# combine data
outd_ext <- list(act, hl) %>%
reduce(inner_join)
# calculate 95% confidence interval of BMC and hit confidence
result <- outd_ext %>%
group_by(endpoint, chemical, direction, threshold) %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD)) %>%
summarise(
BMC = median(POD),
BMCL = quantile(POD, 0.025),
BMCU = quantile(POD, 0.975),
hit_confidence = sum(hit)/n()
)
result %>% select(-threshold)
temp1 <- extract_curvep_data(outd, "summary")
temp1
zfishdev_complete # a complete zfishdev dataset; available upon request
data("zfishdev_act")
acts <- zfishdev_act %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "direction"), chemical = "chemical", threshold = "thres", potency = "POD")
data("zfishdev_act")
acts <- zfishdev_act %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "direction"), chemical = "chemical", threshold = "threshold", potency = "POD")
data("zfishdev_act")
acts <- zfishdev_act %>%
mutate(POD = ifelse(is.na(POD), conc_highest, POD))
outthres <- identify_basenoise_threshold(acts, id = c("endpoint", "direction"), chemical = "chemical", threshold = "threshold", potency = "POD")
# pooled variance
p <- ggplot(outthres, aes(x = thres, y = pooled_variance))
p + geom_point() + geom_line() + facet_wrap(~ endpoint)
# pooled variance
p <- ggplot(outthres, aes(x = threshold, y = pooled_variance))
p + geom_point() + geom_line() + facet_wrap(~ endpoint)
# curvature
p <- ggplot(outthres, aes(x = threshold, y = curvature))
p + geom_point() + geom_line() + facet_wrap(~ endpoint)
outthres %>%
filter(thresCurva == 1 | thresDist == 1) %>%
select(endpoint, directionality, thresCurva, thresDist, thres)
outthres %>%
filter(thresCurva == 1 | thresDist == 1) %>%
select(endpoint, direction, thresCurva, thresDist, thres)
outthres %>%
filter(thresCurva == 1 | thresDist == 1) %>%
select(endpoint, direction, thresCurva, thresDist, threshold)
devtools::install(build_vignettes = TRUE)
?Rcurvep
jsonlite::fromJSON(file(here("data-raw", "data.json")))
jsonlite::fromJSON(file(here::here("data-raw", "data.json")))
install.packages("here")
jsonlite::fromJSON(file(here::here("data-raw", "data.json")))
jsonlite::fromJSON(file(here::here("data-raw", "data.json")))
jsonlite::fromJSON(file(here::here("data-raw", "data.json")))
temp1 <- jsonlite::fromJSON(file(here::here("data-raw", "data.json")))
temp1
temp1$data
temp1$data$concs
temp1$data[1,]
temp1$data[1,]$concs
?rudata(zfishdev)
x <- zfishdev %>% split(.$endpoint)
data(zfishdev)
x <- zfishdev %>% split(.$endpoint)
x
toJSON
temp1$data[1,]
temp1$data[1,] %>% as_tibble
temp1$data[1,] %>% as_tibble %>% unnest()
temp1$data[1,]  %>% unnest()
temp1$data  %>% unnest()
?file
?fromJSON
jsond$data %>% tidyr::unnest()
jsond <- jsonlite::fromJSON(file(here::here("data-raw", "data.json")))
jsond$data %>% tidyr::unnest()
?Rcurvep
?devtools::install()
?devtools::install
?devtools::install(build_vignettes =  TRUE)
devtools::install(build_vignettes =  TRUE)
?Rcu
?Rcu
?Rcurvep
?Rcurvep
devtools::install(build_vignettes =  TRUE)
?Rcurvep
?`Rcurvep-package`
devtools::install()
load_all
load_all()
devtools::load_all()
?Rcurvep
?`Rcurvep-package`
vignette("Rcurvep-intro")
?Rcurvep
browseVignettes(package = "Rcurvep")
